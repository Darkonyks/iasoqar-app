# Generated by Django 5.1.12 on 2025-09-29 19:11

from django.db import migrations, models


def update_location_country_values(apps, schema_editor):
    """Mapira postojeće vrednosti država na nove kodove za OstalaLokacija"""
    OstalaLokacija = apps.get_model('company', 'OstalaLokacija')
    
    # Mapiranje starih naziva na nove kodove
    country_mapping = {
        'Srbija': 'RS',
        'Serbia': 'RS',
        'Bosna i Hercegovina': 'BA',
        'Bosnia and Herzegovina': 'BA',
        'Crna Gora': 'ME',
        'Montenegro': 'ME',
        'Hrvatska': 'HR',
        'Croatia': 'HR',
        'Slovenija': 'SI',
        'Slovenia': 'SI',
        'Makedonija': 'MK',
        'Macedonia': 'MK',
        'Severna Makedonija': 'MK',
        'North Macedonia': 'MK',
        'Albanija': 'AL',
        'Albania': 'AL',
        'Bugarska': 'BG',
        'Bulgaria': 'BG',
        'Rumunija': 'RO',
        'Romania': 'RO',
        'Mađarska': 'HU',
        'Hungary': 'HU',
        'Austrija': 'AT',
        'Austria': 'AT',
        'Nemačka': 'DE',
        'Germany': 'DE',
        'Italija': 'IT',
        'Italy': 'IT',
        'Francuska': 'FR',
        'France': 'FR',
        'Španija': 'ES',
        'Spain': 'ES',
        'Grčka': 'GR',
        'Greece': 'GR',
    }
    
    for location in OstalaLokacija.objects.all():
        if location.country in country_mapping:
            location.country = country_mapping[location.country]
            location.save(update_fields=['country'])
        elif location.country and len(location.country) > 2:
            # Ako nije mapirana, postavi na RS kao default
            location.country = 'RS'
            location.save(update_fields=['country'])


def reverse_location_country_values(apps, schema_editor):
    """Vraća kodove na puna imena (za rollback)"""
    OstalaLokacija = apps.get_model('company', 'OstalaLokacija')
    
    # Reverse mapiranje
    reverse_mapping = {
        'RS': 'Srbija',
        'BA': 'Bosna i Hercegovina',
        'ME': 'Crna Gora',
        'HR': 'Hrvatska',
        'SI': 'Slovenija',
        'MK': 'Severna Makedonija',
        'AL': 'Albanija',
        'BG': 'Bugarska',
        'RO': 'Rumunija',
        'HU': 'Mađarska',
        'AT': 'Austrija',
        'DE': 'Nemačka',
        'IT': 'Italija',
        'FR': 'Francuska',
        'ES': 'Španija',
        'GR': 'Grčka',
    }
    
    for location in OstalaLokacija.objects.all():
        if location.country in reverse_mapping:
            location.country = reverse_mapping[location.country]
            location.save(update_fields=['country'])


class Migration(migrations.Migration):

    dependencies = [
        ('company', '0050_update_country_field_choices'),
    ]

    operations = [
        # Prvo mapiramo postojeće vrednosti
        migrations.RunPython(update_location_country_values, reverse_location_country_values),
        
        # Zatim ažuriramo polje
        migrations.AlterField(
            model_name='ostalalokacija',
            name='country',
            field=models.CharField(choices=[('AD', 'Andora'), ('AL', 'Albanija'), ('AT', 'Austrija'), ('BA', 'Bosna i Hercegovina'), ('BE', 'Belgija'), ('BG', 'Bugarska'), ('BY', 'Belorusija'), ('CH', 'Švajcarska'), ('CY', 'Kipar'), ('CZ', 'Češka'), ('DE', 'Nemačka'), ('DK', 'Danska'), ('EE', 'Estonija'), ('ES', 'Španija'), ('FI', 'Finska'), ('FR', 'Francuska'), ('GB', 'Velika Britanija'), ('GR', 'Grčka'), ('HR', 'Hrvatska'), ('HU', 'Mađarska'), ('IE', 'Irska'), ('IS', 'Island'), ('IT', 'Italija'), ('LI', 'Lihtenštajn'), ('LT', 'Litvanija'), ('LU', 'Luksemburg'), ('LV', 'Letonija'), ('MC', 'Monako'), ('MD', 'Moldavija'), ('ME', 'Crna Gora'), ('MK', 'Severna Makedonija'), ('MT', 'Malta'), ('NL', 'Holandija'), ('NO', 'Norveška'), ('PL', 'Poljska'), ('PT', 'Portugal'), ('RO', 'Rumunija'), ('RS', 'Srbija'), ('RU', 'Rusija'), ('SE', 'Švedska'), ('SI', 'Slovenija'), ('SK', 'Slovačka'), ('SM', 'San Marino'), ('TR', 'Turska'), ('UA', 'Ukrajina'), ('VA', 'Vatikan'), ('XK', 'Kosovo')], default='RS', help_text='Izaberite državu', max_length=2, verbose_name='Država'),
        ),
    ]
